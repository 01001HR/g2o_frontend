
void  _pwn_RT_computeH ( Matrix12f&  _Ho , const PointWithNormal&  p , const Matrix6f&  o ) { 
  float  _aux1 = p(0) ; 
  float  _aux2 = o(0,0) ; 
  float  _aux3 = o(0,3) ; 
  float  _aux4 = p(3) ; 
  float  _aux5 = _aux3*_aux4+_aux1*_aux2 ; 
  float  _aux6 = o(3,3) ; 
  float  _aux7 = _aux4*_aux6+_aux1*_aux3 ; 
  float  _aux8 = p(1) ; 
  float  _aux9 = p(4) ; 
  float  _aux10 = _aux3*_aux9+_aux2*_aux8 ; 
  float  _aux11 = _aux6*_aux9+_aux3*_aux8 ; 
  float  _aux12 = p(2) ; 
  float  _aux13 = p(5) ; 
  float  _aux14 = _aux13*_aux3+_aux12*_aux2 ; 
  float  _aux15 = _aux13*_aux6+_aux12*_aux3 ; 
  float  _aux16 = o(0,1) ; 
  float  _aux17 = _aux1*_aux16 ; 
  float  _aux18 = o(0,4) ; 
  float  _aux19 = _aux18*_aux4+_aux17 ; 
  float  _aux20 = o(1,3) ; 
  float  _aux21 = o(3,4) ; 
  float  _aux22 = _aux21*_aux4 ; 
  float  _aux23 = _aux22+_aux1*_aux20 ; 
  float  _aux24 = _aux16*_aux8 ; 
  float  _aux25 = _aux18*_aux9+_aux24 ; 
  float  _aux26 = _aux21*_aux9 ; 
  float  _aux27 = _aux20*_aux8+_aux26 ; 
  float  _aux28 = _aux12*_aux16 ; 
  float  _aux29 = _aux28+_aux13*_aux18 ; 
  float  _aux30 = _aux13*_aux21 ; 
  float  _aux31 = _aux30+_aux12*_aux20 ; 
  float  _aux32 = o(0,2) ; 
  float  _aux33 = _aux1*_aux32 ; 
  float  _aux34 = o(0,5) ; 
  float  _aux35 = _aux34*_aux4+_aux33 ; 
  float  _aux36 = o(2,3) ; 
  float  _aux37 = o(3,5) ; 
  float  _aux38 = _aux37*_aux4 ; 
  float  _aux39 = _aux38+_aux1*_aux36 ; 
  float  _aux40 = _aux32*_aux8 ; 
  float  _aux41 = _aux34*_aux9+_aux40 ; 
  float  _aux42 = _aux37*_aux9 ; 
  float  _aux43 = _aux36*_aux8+_aux42 ; 
  float  _aux44 = _aux12*_aux32 ; 
  float  _aux45 = _aux44+_aux13*_aux34 ; 
  float  _aux46 = _aux13*_aux37 ; 
  float  _aux47 = _aux46+_aux12*_aux36 ; 
  float  _aux48 = _aux20*_aux4+_aux17 ; 
  float  _aux49 = _aux36*_aux4+_aux33 ; 
  float  _aux50 = _aux20*_aux9+_aux24 ; 
  float  _aux51 = _aux36*_aux9+_aux40 ; 
  float  _aux52 = _aux28+_aux13*_aux20 ; 
  float  _aux53 = _aux44+_aux13*_aux36 ; 
  float  _aux54 = _aux22+_aux1*_aux18 ; 
  float  _aux55 = _aux18*_aux8+_aux26 ; 
  float  _aux56 = _aux30+_aux12*_aux18 ; 
  float  _aux57 = o(1,1) ; 
  float  _aux58 = o(1,4) ; 
  float  _aux59 = _aux4*_aux58+_aux1*_aux57 ; 
  float  _aux60 = o(4,4) ; 
  float  _aux61 = _aux4*_aux60+_aux1*_aux58 ; 
  float  _aux62 = _aux58*_aux9+_aux57*_aux8 ; 
  float  _aux63 = _aux60*_aux9+_aux58*_aux8 ; 
  float  _aux64 = _aux13*_aux58+_aux12*_aux57 ; 
  float  _aux65 = _aux13*_aux60+_aux12*_aux58 ; 
  float  _aux66 = o(1,2) ; 
  float  _aux67 = _aux1*_aux66 ; 
  float  _aux68 = o(1,5) ; 
  float  _aux69 = _aux4*_aux68+_aux67 ; 
  float  _aux70 = o(2,4) ; 
  float  _aux71 = o(4,5) ; 
  float  _aux72 = _aux4*_aux71 ; 
  float  _aux73 = _aux72+_aux1*_aux70 ; 
  float  _aux74 = _aux66*_aux8 ; 
  float  _aux75 = _aux68*_aux9+_aux74 ; 
  float  _aux76 = _aux71*_aux9 ; 
  float  _aux77 = _aux70*_aux8+_aux76 ; 
  float  _aux78 = _aux12*_aux66 ; 
  float  _aux79 = _aux78+_aux13*_aux68 ; 
  float  _aux80 = _aux13*_aux71 ; 
  float  _aux81 = _aux80+_aux12*_aux70 ; 
  float  _aux82 = _aux4*_aux70+_aux67 ; 
  float  _aux83 = _aux70*_aux9+_aux74 ; 
  float  _aux84 = _aux78+_aux13*_aux70 ; 
  float  _aux85 = _aux38+_aux1*_aux34 ; 
  float  _aux86 = _aux34*_aux8+_aux42 ; 
  float  _aux87 = _aux46+_aux12*_aux34 ; 
  float  _aux88 = _aux72+_aux1*_aux68 ; 
  float  _aux89 = _aux68*_aux8+_aux76 ; 
  float  _aux90 = _aux80+_aux12*_aux68 ; 
  float  _aux91 = o(2,2) ; 
  float  _aux92 = o(2,5) ; 
  float  _aux93 = _aux4*_aux92+_aux1*_aux91 ; 
  float  _aux94 = o(5,5) ; 
  float  _aux95 = _aux4*_aux94+_aux1*_aux92 ; 
  float  _aux96 = _aux9*_aux92+_aux8*_aux91 ; 
  float  _aux97 = _aux9*_aux94+_aux8*_aux92 ; 
  float  _aux98 = _aux13*_aux92+_aux12*_aux91 ; 
  float  _aux99 = _aux13*_aux94+_aux12*_aux92 ; 
   _Ho ( 0 , 0 ) = _aux4*_aux7+_aux1*_aux5 ; 
   _Ho ( 0 , 1 ) = _aux11*_aux4+_aux1*_aux10 ; 
   _Ho ( 0 , 2 ) = _aux15*_aux4+_aux1*_aux14 ; 
   _Ho ( 0 , 3 ) = _aux23*_aux4+_aux1*_aux19 ; 
   _Ho ( 0 , 4 ) = _aux27*_aux4+_aux1*_aux25 ; 
   _Ho ( 0 , 5 ) = _aux31*_aux4+_aux1*_aux29 ; 
   _Ho ( 0 , 6 ) = _aux39*_aux4+_aux1*_aux35 ; 
   _Ho ( 0 , 7 ) = _aux4*_aux43+_aux1*_aux41 ; 
   _Ho ( 0 , 8 ) = _aux4*_aux47+_aux1*_aux45 ; 
   _Ho ( 0 , 9 ) = _aux5 ; 
   _Ho ( 0 , 10 ) = _aux48 ; 
   _Ho ( 0 , 11 ) = _aux49 ; 
   _Ho ( 1 , 0 ) = _aux7*_aux9+_aux5*_aux8 ; 
   _Ho ( 1 , 1 ) = _aux11*_aux9+_aux10*_aux8 ; 
   _Ho ( 1 , 2 ) = _aux15*_aux9+_aux14*_aux8 ; 
   _Ho ( 1 , 3 ) = _aux23*_aux9+_aux19*_aux8 ; 
   _Ho ( 1 , 4 ) = _aux27*_aux9+_aux25*_aux8 ; 
   _Ho ( 1 , 5 ) = _aux31*_aux9+_aux29*_aux8 ; 
   _Ho ( 1 , 6 ) = _aux39*_aux9+_aux35*_aux8 ; 
   _Ho ( 1 , 7 ) = _aux43*_aux9+_aux41*_aux8 ; 
   _Ho ( 1 , 8 ) = _aux47*_aux9+_aux45*_aux8 ; 
   _Ho ( 1 , 9 ) = _aux10 ; 
   _Ho ( 1 , 10 ) = _aux50 ; 
   _Ho ( 1 , 11 ) = _aux51 ; 
   _Ho ( 2 , 0 ) = _aux13*_aux7+_aux12*_aux5 ; 
   _Ho ( 2 , 1 ) = _aux11*_aux13+_aux10*_aux12 ; 
   _Ho ( 2 , 2 ) = _aux13*_aux15+_aux12*_aux14 ; 
   _Ho ( 2 , 3 ) = _aux13*_aux23+_aux12*_aux19 ; 
   _Ho ( 2 , 4 ) = _aux13*_aux27+_aux12*_aux25 ; 
   _Ho ( 2 , 5 ) = _aux13*_aux31+_aux12*_aux29 ; 
   _Ho ( 2 , 6 ) = _aux13*_aux39+_aux12*_aux35 ; 
   _Ho ( 2 , 7 ) = _aux13*_aux43+_aux12*_aux41 ; 
   _Ho ( 2 , 8 ) = _aux13*_aux47+_aux12*_aux45 ; 
   _Ho ( 2 , 9 ) = _aux14 ; 
   _Ho ( 2 , 10 ) = _aux52 ; 
   _Ho ( 2 , 11 ) = _aux53 ; 
   _Ho ( 3 , 0 ) = _aux4*_aux54+_aux1*_aux48 ; 
   _Ho ( 3 , 1 ) = _aux4*_aux55+_aux1*_aux50 ; 
   _Ho ( 3 , 2 ) = _aux4*_aux56+_aux1*_aux52 ; 
   _Ho ( 3 , 3 ) = _aux4*_aux61+_aux1*_aux59 ; 
   _Ho ( 3 , 4 ) = _aux4*_aux63+_aux1*_aux62 ; 
   _Ho ( 3 , 5 ) = _aux4*_aux65+_aux1*_aux64 ; 
   _Ho ( 3 , 6 ) = _aux4*_aux73+_aux1*_aux69 ; 
   _Ho ( 3 , 7 ) = _aux4*_aux77+_aux1*_aux75 ; 
   _Ho ( 3 , 8 ) = _aux4*_aux81+_aux1*_aux79 ; 
   _Ho ( 3 , 9 ) = _aux19 ; 
   _Ho ( 3 , 10 ) = _aux59 ; 
   _Ho ( 3 , 11 ) = _aux82 ; 
   _Ho ( 4 , 0 ) = _aux54*_aux9+_aux48*_aux8 ; 
   _Ho ( 4 , 1 ) = _aux55*_aux9+_aux50*_aux8 ; 
   _Ho ( 4 , 2 ) = _aux56*_aux9+_aux52*_aux8 ; 
   _Ho ( 4 , 3 ) = _aux61*_aux9+_aux59*_aux8 ; 
   _Ho ( 4 , 4 ) = _aux63*_aux9+_aux62*_aux8 ; 
   _Ho ( 4 , 5 ) = _aux65*_aux9+_aux64*_aux8 ; 
   _Ho ( 4 , 6 ) = _aux73*_aux9+_aux69*_aux8 ; 
   _Ho ( 4 , 7 ) = _aux77*_aux9+_aux75*_aux8 ; 
   _Ho ( 4 , 8 ) = _aux81*_aux9+_aux79*_aux8 ; 
   _Ho ( 4 , 9 ) = _aux25 ; 
   _Ho ( 4 , 10 ) = _aux62 ; 
   _Ho ( 4 , 11 ) = _aux83 ; 
   _Ho ( 5 , 0 ) = _aux13*_aux54+_aux12*_aux48 ; 
   _Ho ( 5 , 1 ) = _aux13*_aux55+_aux12*_aux50 ; 
   _Ho ( 5 , 2 ) = _aux13*_aux56+_aux12*_aux52 ; 
   _Ho ( 5 , 3 ) = _aux13*_aux61+_aux12*_aux59 ; 
   _Ho ( 5 , 4 ) = _aux13*_aux63+_aux12*_aux62 ; 
   _Ho ( 5 , 5 ) = _aux13*_aux65+_aux12*_aux64 ; 
   _Ho ( 5 , 6 ) = _aux13*_aux73+_aux12*_aux69 ; 
   _Ho ( 5 , 7 ) = _aux13*_aux77+_aux12*_aux75 ; 
   _Ho ( 5 , 8 ) = _aux13*_aux81+_aux12*_aux79 ; 
   _Ho ( 5 , 9 ) = _aux29 ; 
   _Ho ( 5 , 10 ) = _aux64 ; 
   _Ho ( 5 , 11 ) = _aux84 ; 
   _Ho ( 6 , 0 ) = _aux4*_aux85+_aux1*_aux49 ; 
   _Ho ( 6 , 1 ) = _aux4*_aux86+_aux1*_aux51 ; 
   _Ho ( 6 , 2 ) = _aux4*_aux87+_aux1*_aux53 ; 
   _Ho ( 6 , 3 ) = _aux4*_aux88+_aux1*_aux82 ; 
   _Ho ( 6 , 4 ) = _aux4*_aux89+_aux1*_aux83 ; 
   _Ho ( 6 , 5 ) = _aux4*_aux90+_aux1*_aux84 ; 
   _Ho ( 6 , 6 ) = _aux4*_aux95+_aux1*_aux93 ; 
   _Ho ( 6 , 7 ) = _aux4*_aux97+_aux1*_aux96 ; 
   _Ho ( 6 , 8 ) = _aux4*_aux99+_aux1*_aux98 ; 
   _Ho ( 6 , 9 ) = _aux35 ; 
   _Ho ( 6 , 10 ) = _aux69 ; 
   _Ho ( 6 , 11 ) = _aux93 ; 
   _Ho ( 7 , 0 ) = _aux85*_aux9+_aux49*_aux8 ; 
   _Ho ( 7 , 1 ) = _aux86*_aux9+_aux51*_aux8 ; 
   _Ho ( 7 , 2 ) = _aux87*_aux9+_aux53*_aux8 ; 
   _Ho ( 7 , 3 ) = _aux88*_aux9+_aux8*_aux82 ; 
   _Ho ( 7 , 4 ) = _aux89*_aux9+_aux8*_aux83 ; 
   _Ho ( 7 , 5 ) = _aux9*_aux90+_aux8*_aux84 ; 
   _Ho ( 7 , 6 ) = _aux9*_aux95+_aux8*_aux93 ; 
   _Ho ( 7 , 7 ) = _aux9*_aux97+_aux8*_aux96 ; 
   _Ho ( 7 , 8 ) = _aux9*_aux99+_aux8*_aux98 ; 
   _Ho ( 7 , 9 ) = _aux41 ; 
   _Ho ( 7 , 10 ) = _aux75 ; 
   _Ho ( 7 , 11 ) = _aux96 ; 
   _Ho ( 8 , 0 ) = _aux13*_aux85+_aux12*_aux49 ; 
   _Ho ( 8 , 1 ) = _aux13*_aux86+_aux12*_aux51 ; 
   _Ho ( 8 , 2 ) = _aux13*_aux87+_aux12*_aux53 ; 
   _Ho ( 8 , 3 ) = _aux13*_aux88+_aux12*_aux82 ; 
   _Ho ( 8 , 4 ) = _aux13*_aux89+_aux12*_aux83 ; 
   _Ho ( 8 , 5 ) = _aux13*_aux90+_aux12*_aux84 ; 
   _Ho ( 8 , 6 ) = _aux13*_aux95+_aux12*_aux93 ; 
   _Ho ( 8 , 7 ) = _aux13*_aux97+_aux12*_aux96 ; 
   _Ho ( 8 , 8 ) = _aux13*_aux99+_aux12*_aux98 ; 
   _Ho ( 8 , 9 ) = _aux45 ; 
   _Ho ( 8 , 10 ) = _aux79 ; 
   _Ho ( 8 , 11 ) = _aux98 ; 
   _Ho ( 9 , 0 ) = _aux5 ; 
   _Ho ( 9 , 1 ) = _aux10 ; 
   _Ho ( 9 , 2 ) = _aux14 ; 
   _Ho ( 9 , 3 ) = _aux19 ; 
   _Ho ( 9 , 4 ) = _aux25 ; 
   _Ho ( 9 , 5 ) = _aux29 ; 
   _Ho ( 9 , 6 ) = _aux35 ; 
   _Ho ( 9 , 7 ) = _aux41 ; 
   _Ho ( 9 , 8 ) = _aux45 ; 
   _Ho ( 9 , 9 ) = _aux2 ; 
   _Ho ( 9 , 10 ) = _aux16 ; 
   _Ho ( 9 , 11 ) = _aux32 ; 
   _Ho ( 10 , 0 ) = _aux48 ; 
   _Ho ( 10 , 1 ) = _aux50 ; 
   _Ho ( 10 , 2 ) = _aux52 ; 
   _Ho ( 10 , 3 ) = _aux59 ; 
   _Ho ( 10 , 4 ) = _aux62 ; 
   _Ho ( 10 , 5 ) = _aux64 ; 
   _Ho ( 10 , 6 ) = _aux69 ; 
   _Ho ( 10 , 7 ) = _aux75 ; 
   _Ho ( 10 , 8 ) = _aux79 ; 
   _Ho ( 10 , 9 ) = _aux16 ; 
   _Ho ( 10 , 10 ) = _aux57 ; 
   _Ho ( 10 , 11 ) = _aux66 ; 
   _Ho ( 11 , 0 ) = _aux49 ; 
   _Ho ( 11 , 1 ) = _aux51 ; 
   _Ho ( 11 , 2 ) = _aux53 ; 
   _Ho ( 11 , 3 ) = _aux82 ; 
   _Ho ( 11 , 4 ) = _aux83 ; 
   _Ho ( 11 , 5 ) = _aux84 ; 
   _Ho ( 11 , 6 ) = _aux93 ; 
   _Ho ( 11 , 7 ) = _aux96 ; 
   _Ho ( 11 , 8 ) = _aux98 ; 
   _Ho ( 11 , 9 ) = _aux32 ; 
   _Ho ( 11 , 10 ) = _aux66 ; 
   _Ho ( 11 , 11 ) = _aux91 ; 
} 

void  _pwn_RT_computeB ( Vector12f&  _Bo , 
		  const PointWithNormal&  p , 
		  const Matrix6f&  o ,
		  const Vector6f& _err) { 
  float  _aux1 = p(0) ; 
  float  _aux2 = _err(0) ; 
  float  _aux3 = o(0,1) ; 
  float  _aux4 = _err(1) ; 
  float  _aux5 = o(0,2) ; 
  float  _aux6 = _err(2) ; 
  float  _aux7 = o(0,3) ; 
  float  _aux8 = _err(3) ; 
  float  _aux9 = o(0,4) ; 
  float  _aux10 = _err(4) ; 
  float  _aux11 = o(0,5) ; 
  float  _aux12 = _err(5) ; 
  float  _aux13 = _aux10*_aux9+_aux7*_aux8+_aux5*_aux6+_aux3*_aux4+o(0,0)*_aux2+_aux11*_aux12 ; 
  float  _aux14 = p(3) ; 
  float  _aux15 = o(1,3) ; 
  float  _aux16 = o(2,3) ; 
  float  _aux17 = o(3,4) ; 
  float  _aux18 = o(3,5) ; 
  float  _aux19 = o(3,3)*_aux8+_aux2*_aux7+_aux16*_aux6+_aux15*_aux4+_aux12*_aux18+_aux10*_aux17 ; 
  float  _aux20 = p(1) ; 
  float  _aux21 = p(4) ; 
  float  _aux22 = p(2) ; 
  float  _aux23 = p(5) ; 
  float  _aux24 = o(1,2) ; 
  float  _aux25 = o(1,4) ; 
  float  _aux26 = o(1,5) ; 
  float  _aux27 = _aux15*_aux8+_aux24*_aux6+o(1,1)*_aux4+_aux2*_aux3+_aux12*_aux26+_aux10*_aux25 ; 
  float  _aux28 = o(2,4) ; 
  float  _aux29 = o(4,5) ; 
  float  _aux30 = _aux2*_aux9+_aux17*_aux8+_aux28*_aux6+_aux25*_aux4+_aux12*_aux29+o(4,4)*_aux10 ; 
  float  _aux31 = o(2,5) ; 
  float  _aux32 = _aux16*_aux8+o(2,2)*_aux6+_aux2*_aux5+_aux24*_aux4+_aux12*_aux31+_aux10*_aux28 ; 
  float  _aux33 = _aux18*_aux8+_aux31*_aux6+_aux26*_aux4+_aux10*_aux29+_aux11*_aux2+o(5,5)*_aux12 ; 
   _Bo ( 0 , 0 ) = _aux14*_aux19+_aux1*_aux13 ; 
   _Bo ( 1 , 0 ) = _aux19*_aux21+_aux13*_aux20 ; 
   _Bo ( 2 , 0 ) = _aux19*_aux23+_aux13*_aux22 ; 
   _Bo ( 3 , 0 ) = _aux14*_aux30+_aux1*_aux27 ; 
   _Bo ( 4 , 0 ) = _aux21*_aux30+_aux20*_aux27 ; 
   _Bo ( 5 , 0 ) = _aux23*_aux30+_aux22*_aux27 ; 
   _Bo ( 6 , 0 ) = _aux14*_aux33+_aux1*_aux32 ; 
   _Bo ( 7 , 0 ) = _aux21*_aux33+_aux20*_aux32 ; 
   _Bo ( 8 , 0 ) = _aux23*_aux33+_aux22*_aux32 ; 
   _Bo ( 9 , 0 ) = _aux13 ; 
   _Bo ( 10 , 0 ) = _aux27 ; 
   _Bo ( 11 , 0 ) = _aux32 ; 
} 
